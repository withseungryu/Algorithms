#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int method[19][4][2] = { 
	{{0,0},{0,1},{0,2},{0,3}},{{0,0},{1,0},{2,0},{3,0}},
	{{0,0},{0,1},{1,0},{2,0}},{{0,0},{0,1},{1,1},{2,1}},{{0,0},{1,0},{2,0},{2,1}},{{0,0},{0,1},{-1,1},{-2,1}},{{0,0},{0,1},{0,2},{1,0}},{{0,0},{0,1},{0,2},{1,2}},
	{{0,0},{1,0},{1,1},{1,2}},{{0,0},{0,1},{0,2},{-1,2}},
	{{0,0},{0,1},{1,0},{1,1}},
	{{0,0},{1,0},{1,1},{2,1}},{{0,0},{0,1},{1,1},{1,2}},{{0,0},{0,1},{-1,1},{-1,2}},{{0,0},{1,0},{0,1},{-1,1}},
	{{0,0},{0,1},{-1,1},{1,1}},{{0,0},{1,0},{2,0},{1,1}},{{0,0},{1,-1},{1,0},{1,1}},{{0,0},{0,1},{0,2},{1,1}}
};

int main() {
	int N, M;
	cin >> N >> M;
	int arr[501][501];
	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			cin >> arr[i][j];
		}
	}
	int answer = 0;
	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			for (int k = 0; k < 19; ++k) {
				int midres = 0;
				for (int l = 0; l < 4; ++l) {
					int dx = method[k][l][0];
					int dy = method[k][l][1];
					if (i + dx >= 0 && j + dy >= 0 && i + dx < N && j + dy < M) {
						midres += arr[i + dx][j + dy];
					}
					else {
						midres = 0;
						break;
					}
				}
				if (midres > answer) {
					answer = midres;
				}
			}
		}
	}
	cout << answer;
}